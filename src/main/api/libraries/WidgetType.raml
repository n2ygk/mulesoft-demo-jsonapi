#%RAML 1.0 Library
usage: Schema for a Widget
uses:
  api: jsonApiLibrary.raml
types:
  widgets:
    description: a widget response
    type: widgets_post
    properties:
      id:
        required: true
    example:
      type: widgets
      id: abc-123
      attributes:
        name: can opener
        qty: 42
      relationships:
        locations:
          data: 
            - type: locations
              id: "14"     
            - type: locations
              id: "15"
          links:
            self: /widgets/abc-123/relationships/location
  widgets_post:
    description: a POSTable widget's primary (id is optional, required attributes are indicated)
    type: widgets_patch
    # looks like inheritance is not multi-level. This is WET!
    properties:
      attributes:
        required: false
        properties:
          name:
            required: true
            type: string
            description: catalog name
          qty:
            required: false
            type: integer
            minimum: 0
            description: quantity
    example:
      type: widgets
      attributes:
        name: can opener
        qty: 42
      relationships:
        locations:
          data: 
            - type: locations
              id: "14"     
            - type: locations
              id: "15"
          links:
            self: /widgets/abc-123/relationships/locations
  widgets_patch:
    description: a PATCHable widget's primary data. Only supply attributes or relationships that are changed.
    type: api.resource_post
    properties:
      attributes:
        required: false
        properties:
          name:
            required: false
            type: string
            description: catalog name
          qty:
            required: false
            type: integer
            minimum: 0
            description: quantity
      relationships:
        type: widgets_relationships
        required: false
    additionalProperties: false
    example:
      type: widgets
      id: abc-123
      attributes:
        qty: 42
      relationships:
        locations:
          data: 
            - type: locations
              id: "13"
  widgets_relationships:
    type: api.relationships
    description: |
      A widget's relationships: 
        - locations: is the list of locations a widget is stored in inventory
        - manufacturer: the manufacturer of the widget
    properties:
      locations:
        type: api.relationshipMember
        description: locations in inventory for the widget
        required: false
      manufacturer:
        type: api.relationshipMember
        description: manufacturer
        required: false
    example:
      locations:
        data: 
          - type: locations
            id: "14"     
          - type: locations
            id: "15"
        links:
          self: /widgets/abc-123/relationships/locations
      manufacturer: 
        data: 
          type: companies
          id: "abc123"
        links: 
          self: /widgets/abc-123/relationships/manufacturer
  # relationships have only type, id and links; no other attributes.
  widgets_relationships_locations:
    type: widgets_relationships_locations_post
    properties:
      id:
        required: true
  widgets_relationships_locations_post:
    type: widgets_relationships_locations_patch
  widgets_relationships_locations_patch:
    type: api.resource_post
    description: locations in inventory
    example:
      type: locations
      id: "14"
      links:
        self: /widgets/abc-123/relationships/locations
  widgets_relationships_manufacturer:
    type: widgets_relationships_manufacturer_post
    properties:
      id:
        required: true
  widgets_relationships_manufacturer_post:
    type: widgets_relationships_manufacturer_patch
  widgets_relationships_manufacturer_patch:
    type: api.resource_post
    description: manufacturer
    example:
      type: companies
      id: "abc123"
      links:
        self: /widgets/abc-123/relationships/manufacturer