#%RAML 1.0 Library
usage: |
  jsonapi collection-item resourceTypes library.
  Usage:
  ```
  uses:
    col: libraries/jsonApiCollections.raml
  ```
  For reasons I don't quite understand, you must use this with the same uses key name
  (api) in your main api.raml and any other libraries that reference types defined in jsonApiLibrary.raml.
  For other reasons I don't understand, this can't just be part of jsonApiLibrary.raml.
uses:
  api: jsonApiLibrary.raml
resourceTypes:
  collection:
    usage: |
      This resourceType should be used for any collection of items.
      Parameters:
        dataType: the type name of the primary data
        exampleCollection: an example of the api.success response
    description: The collection of <<resourcePathName>>
    get:
      responses: 
        200:
          body: 
            application/vnd.api+json:
              type: api.success
              properties: 
                data: <<dataType>>[]
              example: 
                <<exampleCollection>>
        404:
          body:
            application/vnd.api+json:
              type: api.failure
              example:
                errors:
                  - status: "404"
                    title: Resource not found
                    detail: <<resourcePath>> not found 
    post:
      body: 
        application/vnd.api+json:
          type: <<dataType>>
      responses:
        200:
          body: 
            application/vnd.api+json:
              type: api.success
              properties: 
                data: <<dataType>>
              example: <<exampleItem>>
  item:
    usage: |
      This resourceType should be used for any single items
      Parameters:
        dataType: the type name of the primary data (must subclass api.response)
        exampleItem: an example of the api.success response
    description: The <<resourcePathName>> item
    get:
      responses: 
        200:
          body: 
            application/vnd.api+json:
              type: api.success
              properties: 
                data: <<dataType>>
              example: 
                <<exampleItem>>
        404:
          body:
            application/vnd.api+json:
              type: api.failure
              example:
                errors:
                  - status: "404"
                    title: Resource not found
                    detail: <<resourcePath>> not found 
    patch:
      body: 
        application/vnd.api+json:
          type: <<dataType>>
      responses:
        200:
          description: |
            The PATCH was accepted and some values may have changed beyond those specified.
            The response contains the result of those updates.
          body: 
            application/vnd.api+json:
              type: api.success
              properties: 
                data: <<dataType>>
              example: <<exampleItem>>
        202:
          description: Accepted for processing. Request has not yet completed.
        204:
          description: No Content. Only those changes submitted have been applied.
        403:
          description: Forbidden
          body:
            application/vnd.api+json:
              type: api.failure
        404:
          description: Not Found
          body:
            application/vnd.api+json:
              type: api.failure
              example:
                errors:
                  - status: "404"
                    title: Resource not found
                    detail: <<resourcePath>> not found 
        409:
          description: Conflict. The update would violate other server-enforced constraints including type and id mismatch.
          body:
            application/vnd.api+json:
              type: api.failure
              example:
                errors:
                  - status: "409"
                    title: Conflict
    delete: # this part is confusing.... See http://jsonapi.org/format/#crud-deleting
      body: 
        application/vnd.api+json:
          type: <<dataType>>
      responses:
        200:
          body: 
            application/vnd.api+json:
              type: api.success