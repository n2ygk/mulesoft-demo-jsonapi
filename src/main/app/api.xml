<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="${https.port}" doc:name="HTTP Listener Configuration" basePath="${api.version}" protocol="HTTPS">
        <tls:context>
            <tls:key-store type="jks" path="server.jks" alias="serverkey" keyPassword="password" password="password" />
        </tls:context>
    </http:listener-config>
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router" />
    <api-platform-gw:api apiName="demo-jsonapi" version="${api.version}" flowRef="api-main" create="false" apikitRef="api-config" doc:name="API Autodiscovery" />
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <flow-ref name="jsonapi-exceptionVars" doc:name="jsonapi-exceptionVars" />
        <apikit:router config-ref="api-config" doc:name="APIkit Router" />
        <!--  <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/> -->
        <!--  replace default global exception strategy with my jsonapi-flavored one -->
        <exception-strategy ref="jsonapi-exception-mapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="api-config" doc:name="APIkit Console" />
    </flow>
    <flow name="patch:/widgets/{id}:application/vnd.api+json:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets" />
        <flow-ref name="jsonapiPATCHitem" doc:name="jsonapiPATCHitem" />
        <!--  example of a flow-specific reference exception strategy -->
        <!--         <exception-strategy ref="jsonapi-exception-mapping" doc:name="Reference Exception Strategy"/>
 -->
    </flow>
    <flow name="patch:/locations/{id}:application/vnd.api+json:api-config">
        <set-variable variableName="type" value="locations" doc:name="Type is locations" />
        <flow-ref name="jsonapiPATCHitem" doc:name="jsonapiPATCHitem" />
    </flow>
    <flow name="get:/locations/{id}:api-config">
        <set-variable variableName="type" value="locations" doc:name="Type is locations" />
        <flow-ref name="jsonapiGETitem" doc:name="jsonapiGETitem" />
    </flow>
    <flow name="get:/widgets/{id}:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets" />
        <flow-ref name="jsonapiGETitem" doc:name="jsonapiGETitem" />
    </flow>
    <flow name="get:/locations:api-config">
        <set-variable variableName="type" value="locations" doc:name="Type is locations" />
        <flow-ref name="jsonapiQueryParamsValidation" doc:name="jsonapiQueryParamsValidation" />
        <flow-ref name="jsonapiGETcollection" doc:name="jsonapiGETcollection" />
    </flow>
    <flow name="get:/widgets:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets" />
        <flow-ref name="jsonapiQueryParamsValidation" doc:name="jsonapiQueryParamsValidation" />
        <flow-ref name="jsonapiGETcollection" doc:name="jsonapiGETcollection" />
    </flow>
    <flow name="post:/locations:application/vnd.api+json:api-config">
        <flow-ref name="jsonapiPOSTitem" doc:name="jsonapiPOSTitem" />
    </flow>
    <flow name="post:/widgets:application/vnd.api+json:api-config" doc:description="The Widget contains optional Location objects. Iterate over those and POST them first?">
        <flow-ref name="jsonapiPOSTitem" doc:name="jsonapiPOSTitem" />
    </flow>
    <flow name="delete:/locations/{id}:api-config">
        <set-variable variableName="type" value="locations" doc:name="Type is locations" />
        <flow-ref name="jsonapiDELETEitem" doc:name="jsonapiDELETEitem" />
    </flow>
    <flow name="delete:/widgets/{id}:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets" />
        <flow-ref name="jsonapiDELETEitem" doc:name="jsonapiDELETEitem" />
    </flow>
    <flow name="delete:/objects:api-config">
        <flow-ref name="jsonapi-clearObjectStore" doc:name="jsonapi-clearObjectStore" />
        <set-payload value="{&quot;message&quot;: &quot;object store deleted&quot;}" doc:name="Set Payload" />
    </flow>
    <flow name="get:/objects:api-config">
        <remove-variable variableName="type" doc:name="No type" />
        <flow-ref name="jsonapiGETcollection" doc:name="jsonapiGETcollection" />
    </flow>
    <flow name="post:/objects:application/vnd.api+json:api-config">
        <set-property propertyName="http.status" value="405" doc:name="status 405" />
        <set-property propertyName="Allow" value="GET, DELETE" doc:name="allow GET,DELETE" />
        <set-payload value="#[null]" doc:name="Set Payload" />
    </flow>
    <flow name="delete:/widgets/{id}/relationships/locations:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets"/>
        <set-variable variableName="relationship" value="locations" doc:name="Relationship is locations"/>
        <flow-ref name="jsonapiDELETErelationships" doc:name="Delete relationships"/>
    </flow>
    <flow name="patch:/widgets/{id}/relationships/manufacturer:application/vnd.api+json:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets"/>
        <set-variable variableName="relationship" value="manufacturer" doc:name="Relationship is manufacturer"/>
        <flow-ref name="jsonapiPATCHrelationship" doc:name="Patch relationship"/>
    </flow>
    <flow name="patch:/widgets/{id}/relationships/locations:application/vnd.api+json:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets"/>
        <set-variable variableName="relationship" value="locations" doc:name="Relationship is locations"/>
        <flow-ref name="jsonapiPATCHrelationship" doc:name="Patch relationship"/>
    </flow>
    <flow name="get:/widgets/{id}/relationships/manufacturer:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets"/>
        <set-variable variableName="relationship" value="manufacturer" doc:name="Relationship is manufacturer"/>
        <flow-ref name="jsonapiGETrelationships" doc:name="GET relationships"/>
    </flow>
    <flow name="get:/widgets/{id}/relationships/locations:api-config">
        <set-variable variableName="type" value="widgets" doc:name="Type is widgets"/>
        <set-variable variableName="relationship" value="locations" doc:name="Relationship is locations"/>
        <flow-ref name="jsonapiGETrelationships" doc:name="GET relationships"/>
    </flow>
    <flow name="post:/widgets/{id}/relationships/locations:application/vnd.api+json:api-config">
        <set-property propertyName="Content-Type" value="application/vnd.api+json" doc:name="Property"/>
        <set-payload value="{&#xA;&quot;data&quot; : {&#xA;&quot;type&quot; : &quot;locations&quot;,&#xA;&quot;id&quot; : &quot;14&quot;&#xA;},&#xA;&quot;links&quot; : {&#xA;&quot;self&quot; : &quot;/locations/14&quot;&#xA;}&#xA;}" doc:name="Set Payload"/>
    </flow>
</mule>
